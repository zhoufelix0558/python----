         目录：
>>>在网络爬虫的时候经常出现'gbk' not decode之类的错误
>>>python中编码的概念



-----------------------------------------------------------------
在网络爬虫的时候经常出现'gbk' not decode:

流程：一般openurl()函数返回的网页都是默认的ANSI字符串，如果是英文网页的话没有关系，但是如果是中文网页(一般为utf-8)的话就需要进行重新编码成utf-8
建立文本的时候，默认的文本也是ANSI编码的，如果是utf-8字符串就需要在创建文件的时候进行事先说明，这时候文件被都出来的话才不是乱码
data=urllib.request.openurl(....),read()		
	#这时候都出来的是ASCii编码的文本
data=data.decode('utf-8')
	#将ASCII编码的文本变成支持中文的utf-8文本
f=open(...,str(data),encoding='utf-8')
	#因为文件建立的时候默认的是ANSI(默认的话就不需要加参数)

---------------------------------------------------------------------
python中编码的概念

代码中字符串的默认编码与代码文件本身的编码一致。
如：s='中文'
如果是在utf8的文件中，该字符串就是utf8编码，如果是在gb2312的文件中，则其编码为gb2312。

如果字符串是这样定义：s=u'中文'，则该字符串的编码就被指定为unicode了，即python的内部编码

python是个容易出现编码问题的语言。
*字节：计算机数据的表示。8位二进制。可以表示无符号整数：0-255。下文，用“字节流”表示“字节”组成的串。 
*字符：英文字符“abc”，或者中文字符“你我他”。字符本身不知道如何在计算机中保存。下文中，会避免使用“字符串”这个词，而用“文本”来表 
 示“字符”组成的串。 
*编码（动词）：按照某种规则（这个规则称为：编码（名词））将“文本”转换为“字节流”。（在python中：unicode变成str） 
*解码（动词）：将“字节流”按照某种规则转换成“文本”。（在python中：str变成unicode） 
 **实际上，任何东西在计算机中表示，都需要编码。例如，视频要编码然后保存在文件中，播放的时候需要解码才能观看。 
unicode：unicode定义了，一个“字符”和一个“数字”的对应，但是并没有规定这个“数字”在计算机中怎么保存。（就像在C中，一个整数既 
 可以是int，也可以是short。unicode没有规定用int还是用short来表示一个“字符”） 
utf8：unicode实现。它使用unicode定义的“字符”“数字”映射，进而规定了，如何在计算机中保存这个数字。其它的utf16等都是 unicode实现。 
gbk：类似utf8这样的“编码”。但是它没有使用unicode定义的“字符”“数字”映射，而是使用了另一套的映射方法。而且，它还定义了如何在计算机中保存。

=python中的encode，decode方法= 
 首先，要知道encode是 unicode转换成str。decode是str转换成unicode。 
 下文中，u代表unicode类型的变量，s代表str类型的变量。 
 u.encode('...')基本上总是能成功的，只要你填写了正确的编码。就像任何文件都可以压缩成zip文件。 
 s.decode('...')经常是会出错的，因为str是什么“编码”取决于上下文，当你解码的时候需要确保s是用什么编码的。就像，打开zip文 
 件的时候，你要确保它确实是zip文件，而不仅仅是伪造了扩展名的zip文件。 
 u.decode(),s.encode()不建议使用，s.encode相当于s.decode().encode()首先用默认编码（一般是 
 ascii）转换成unicode在进行encode。

详细内容见http://blog.csdn.net/waleking/article/details/7600328
----------------------------------------------------------------------
